{"dependencies":[],"generated":{"js":"console.log('in clone.js');\n\n// 对象深度拷贝\n\nconst testObj = {\n\tname: 'Ange Lee',\n\tsex: 'man',\n\tage: '18',\n\tfriends: ['LePenghui', 'LeXingXing', 'LiWenhua'],\n\tlike: 'ski',\n\tlikely: function() {\n\t\tconsole.log(`I like ${this.like}`);\n\t},\n\tcompany: {\n\t\tname: 'MT',\n\t\tmiss: 'lipenghui02',\n\t\ttime: new Date()\n\t}\n}\n\n// 当被拷贝的内容没有方法，也就没有函数的时候，可以用这个方法\nfunction cloneA(obj) {\n\treturn JSON.parse(JSON.stringify(obj));\n}\nlet ahui = cloneA(testObj);\nconsole.log('json拷贝', ahui);\n\n\n// 深度拷贝\nfunction deepClone (obj) {\n\tif (typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\n\tlet result = obj instanceof Array ? [] : {};\n\tfor (let i in obj) {\n\t\tresult[i] = arguments.callee(obj[i]);\n\t}\n\n\treturn result;\n}\nlet angeli = deepClone(testObj);\nconsole.log('深度拷贝', angeli);\nangeli.like = 'baseketball';\nangeli.likely();\n\nconsole.log(testObj.company.time);\nconsole.log(angeli.company.time);\n\n\n\n\n\n\n\n"},"hash":"edb6cd11944325cd0dd4bedb04ebc6dd"}