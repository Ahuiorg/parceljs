{"dependencies":[],"generated":{"js":"console.log('in sort.js');\n\nfunction swap (i, j, array) {\n\tlet temp = array[i];\n\tarray[i] = array[j];\n\tarray[j] = temp;\n}\n\nconst testArray = [1, 2, 4, 3, 8, 5, 9, 7, 0, 6];\n\n// 冒泡排序\nfunction popSort(array) {\n\tlet len = array.length, isSwap;\n\tfor (let i = 0; i < len; i++) {\n\t\tisSwap = false;\n\t\tfor (let j = 0; j < len - i -1; j++) {\n\t\t\t(array[j] > array[j + 1]) && (isSwap = true) && (swap(j, j + 1, array))\n\t\t}\n\t}\n\treturn array;\n}\nconsole.log(popSort(testArray), 'popSort');\n\n// 选择排序\nfunction selectSort(array) {\n\tlet len = array.len, min=0;\n\tfor (let i = 0; i < len; i++) {\n\t\tmin = i;\n\t\tfor (let j = i + 1; j < len; j++) {\n\t\t\tif (array[min] > array[j]) {\n\t\t\t\tmin = j;\n\t\t\t}\n\t\t}\n\t\tif (min !== i) {\n\t\t\tswap(i, min, array);\n\t\t}\n\t}\n\treturn array;\n}\nconsole.log(selectSort(testArray), 'selectSort');\n\n// 快速排序\nfunction querySort(array) {\n\tif (array.length > 1) {\n\t\tlet len = array.length,\n\t\t\tq = array[0],\n\t\t\tleftArray = [],\n\t\t\trightArray = [];\n\t\tfor (let i = 1; i < len; i++) {\n\t\t\tif (array[i] < q) {\n\t\t\t\tleftArray.push(array[i]);\n\t\t\t} else {\n\t\t\t\trightArray.push(array[i]);\n\t\t\t}\n\t\t}\n\t\treturn [].concat(arguments.callee(leftArray), [q], arguments.callee(rightArray));\n\t} else {\n\t\treturn array;\n\t}\n}\nconsole.log(querySort(testArray), 'querySort');\n"},"hash":"3037f67abcdc744c6c6efecf5582e996"}